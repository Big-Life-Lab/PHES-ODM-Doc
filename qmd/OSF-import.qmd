---
title: "Import from OSF"
format: html
editor: visual
---

```{r}
#| label: getting-started
#| echo: false
#| output: false
library(here)
library(osfr)
library(dplyr)
library(knitr)
library(readxl)

source("../R/osf_util.R")

```

## Getting started

This notebook helps work with `r odm_osf['name']` project files that are stored Open Science Foundation (OSF.io).

The OSF.io URL for the project is **`r osf_project_url`**.

There is an OSF component for each ODM versions. These component names begin with "Version".

```{r}
#| echo: false
kable(version_names, col.names = 'The ODM versions with supporting files are:')
```

The current selected version is *`r default_version_name`*. You can modify the qmd file line 25 to change the default version.

```{r}
#| echo: false

kable(file_names, col.names = paste('Available files for', default_version_name))
```

from osfclient import OSF

# Authenticate with OSF

osf = OSF(auth=('your_username', 'your_password'))

# Get the list of projects for the authenticated user

projects = osf.projects()

# Print the names of the projects

for project in projects: print(project\['attributes'\]\['title'\])

# Get the list of files for a specific project

project_id = 'your_project_id' files = osf.files(project_id)

# Print the names of the files

for file in files: print(file\['attributes'\]\['name'\])

    from osfclient import OSF

    # Create a client object
    osf = OSF()

    # Authenticate using your OSF account
    osf.auth(username='your_username', password='your_password')

    # Download a file from a project
    project_id = 'abcdefg'
    file_id = 'hijklmn'
    file = osf.file(project_id, file_id).download()

    # Do something with the file
    with open(file.name, 'rb') as f:
        data = f.read()
        print(data)

You can also use the **`osfclient`** package to upload, delete and get metadata of files

    Copy code#Upload a file
    osf.file(project_id, file_id).upload('path/to/file')

    #Delete a file
    osf.file(project_id, file_id).delete()

    # Get metadata of a file
    metadata = osf.file(project_id, file_id).metadata()
