{"title":"Tables","markdown":{"yaml":{"project":{"execute-dir":"../"}},"headingText":"Tables","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n```{r setup, echo=FALSE}\nknitr::opts_knit$set(root.dir = normalizePath(\"../\"))\n```\n\n<!--` reference1 -->\n\n\n{{< include _dictionary-version.qmd >}}\n\nThe ODM database model has 21 tables in its full relational database. The full model is commonly referred to as \"long\" tables as it stores data with one measurement per row. Each table has mandatory and optional headers.\n\n::: callout-note\n## Data storage\n\nStore all ODM data in the 21 recommended tables to ensure optimal interoprablity and support by the [ODM validation toolkit](https://validate-docs.phes-odm.org \"ODM validation toolkit\") and other ODM libraries.\n\nUsers can, however, create custom tables or 'views' by merging fields from any table. A common format for data entry format are \"wide\" table format, with *one day per row* and multiple measures or attributes per row. It is important to note that this guide does not provide instructions on generating wide tables.\n:::\n\n## Table types\n\nThere are five table types:\n\n1\\) **Regular report tables**. The `measures` and `samples` tables are used for daily reporting of new measurements and information on sample collection. There are three tables that support regular reporting:- `measureSets` (optional) is used to link measures, `sampleRelationships` (optional) is used when samples are pooled or split, and `qualityReports` is used for detailed quality assurance and control measures.\n\n2\\) **Contact information tables**. The `sites`, `organizations`, `contacts`, and `addresses` tables store contact information for the testing site and the person who performed the testing.\n\n3\\) **Protocol or methods tables**. The `protocols` and `instruments` tables hold information on the methods used for sample collection or measurement. `protocolSteps` and `protocolRelationships` tables are used in conjunction with the `protocols` table.\n\n4\\) **Other report tables**.Â The `polygons` table stores information on the sample area and the `datasets` table includes information on the data custodian and owner.\n\n5\\) **Dictionary reference tables**. The `parts` table describes all elements of the ODM, including tables, table headers, measures, methods, categories, and units. The `sets` table stores collections of parts, such as units grouped together in a unitSet. The `languages` and `translations` tables support translations.\n\n## Header roles\n\nEach table in the ODM has column headers, also known as table variables, fields, or entity relationship attributes. The header serves as the top row and contains the variable name.\n\n**Primary key** (PK) - With the exception of the dictionary tables, all tables have one primary key. The primary key serves as a unique identifier for each row in the table, meaning that a primary key value cannot be repeated.\n\n**Foreign key** (FK) - Tables may have one or more foreign keys. A foreign key connects an entry to another table with a primary key. This allows for relationships to be established between tables, making it possible to link data between different tables.\n\n**Header** (header) - This label is used in a table description when a header is not a primary or foreign key.\n\n## Mandatory, optional, mandatoryIf\n\nEach header may be classified as either `mandatory` or `optional`. In the `measures` table, examples of mandatory headers are the `measureID` and `measurement date`. The ODM validation toolkit can be used to validate data, and will return an error if a table lacks a mandatory header or if there are missing row entries for mandatory fields.\n\nAdditionally, there are special headers called `mandatoryIf` headers. These headers are mandatory if certain conditions apply. For example, the `protocol steps` table has row entries that are either `measures` or `methods`. If the row entry is a `measure`, then a `unit` becomes `mandatory` since all measures must have a unit. Therefore, units are `mandatoryIf` in the protocol steps table.\n\n<!--` reference1/ -->\n\n```{r, echo=FALSE, warning=FALSE}\n# Can put warning=FALSE above if warnings in display are an issue\n# Source utility functions\nsource(\"R/qmd-utils.R\")\n# Source table formatting\nsource(\"R/format-table.R\")\n# Source warning utils\nsource(\"R/warning-utils.R\")\nsource(\"R/odm-dictionary-file.R\")\nsource(\"R/parts-sheet.R\")\n# String set Values\npart_sheet_table_column_type_set_PK <- \"Primary Key\"\npart_sheet_table_column_type_set_FK <- \"Foreign Key\"\npart_sheet_table_column_type_set_header <- \"Header\"\n\n\n# Read in and prepare parts data.frame\nparts_table <- format_table(parts_table_source, parts_sheet_column_names, remove_duplicate = TRUE)\n\n# Generate tables data.frame\ntables_data <-\n  parts_table[parts_table[[parts_sheet_column_names$part_type_column_name]] == parts$part_type_is_table &\n                parts_table[[parts_sheet_column_names$part_status_column_name]] == parts$status_is_active,]\n\n# Sort tables alphabetically based on partID\ntables_data <- tables_data[order(tables_data[[parts_sheet_column_names$part_ID_column_name]]),]\n\n# Utilize tables_data to generate names of table specific columns\nall_required_column_names <-\n  glue::glue('{tables_data[[parts_sheet_column_names$part_ID_column_name]]}Required')\nall_order_column_names <-\n  glue::glue('{tables_data[[parts_sheet_column_names$part_ID_column_name]]}Order')\nall_table_column_names <- tables_data[[parts_sheet_column_names$part_ID_column_name]]\ntable_name_columns <- c(all_table_column_names, all_required_column_names, all_order_column_names)\n\n# Perform additional formatting on table specific columns\nparts_table <- format_parts_table(parts_table)\nparts_table[all_table_column_names] <- lapply(parts_table[all_table_column_names], trimws)\n\n# Declaring string that will be appended during the loops\ntable_of_content <- glue::glue('## Table list\n                               <ul>')\ntables_info_display_content <- \"\"\n\nfor (table_row_index in seq_len(nrow(tables_data))) {\n  current_table_data <- tables_data[table_row_index, ]\n  # Invalid partIDs are removed during format_table so no further verification is needed\n  current_table_ID <- current_table_data[[parts_sheet_column_names$part_ID_column_name]]\n  current_table_order_column_name <- all_order_column_names[[table_row_index]]\n  current_table_required_column_name <- all_required_column_names[[table_row_index]]\n  \n  \n  # Acquire columns that belong to the table\n  table_columns <-\n    parts_table[parts_table[[current_table_ID]] == parts$part_sheet_table_column_type_is_PK |\n                  parts_table[[current_table_ID]] == parts$part_sheet_table_column_type_is_FK |\n                  parts_table[[current_table_ID]] == parts$part_sheet_table_column_type_is_header,]\n  # In case a table has no PK, FK, header\n  if(nrow(table_columns)==0){\n    warning(skipped_and_invalid(current_table_ID))\n    next()\n  }\n  \n  # Order table columns by the order column if valid column is present\n  if (verify_input(\n    table_columns[[current_table_order_column_name]],\n    skipped_order(current_table_ID)\n  )) {\n    table_columns <-\n      table_columns[order(as.numeric(table_columns[[current_table_order_column_name]])), ]\n  }\n  \n  # Pull out display content\n  current_table_label <- current_table_data[[parts_sheet_column_names$part_label_column_name]]\n  current_table_description <- current_table_data[[parts_sheet_column_names$part_description_column_name]]\n  current_table_instructions <- current_table_data[[parts_sheet_column_names$part_instruction_column_name]]\n  \n  # Append table display content\n  table_of_content <-\n    glue::glue(\n      '{table_of_content}<li><a href=\\\"#{current_table_ID}\\\">'\n    )\n  # Append table label related content\n  part_label_label <- parts_table[parts_table[[parts_sheet_column_names$part_ID_column_name]]== parts_sheet_column_names$part_label_column_name, parts_sheet_column_names$part_label_column_name]\n  part_ID_label <- parts_table[parts_table[[parts_sheet_column_names$part_ID_column_name]]== parts_sheet_column_names$part_ID_column_name, parts_sheet_column_names$part_label_column_name]\n  table_of_content <- verify_and_append_content(\n    table_of_content,\n    current_table_label,\n    missing_and_substituted(current_table_ID, part_label_label, part_ID_label),\n    glue::glue('{current_table_label}</a></li>'),\n    glue::glue('{current_table_ID}</a></li>')\n  )\n  tables_info_display_content <- verify_and_append_content(\n    tables_info_display_content,\n    current_table_label,\n    missing_and_substituted(current_table_ID, part_label_label, part_ID_label),\n    glue::glue('\n    \n      ### {current_table_label} {{ #{current_table_ID} }}\n      partID: <a href=\\\"/parts.html#{current_table_ID}\\\">{current_table_ID}</a>. '),\n    glue::glue('\n      ### {current_table_ID} {{ #{current_table_ID} }}\n      partID: <a href=\\\"/parts.html#{current_table_ID}\\\">{current_table_ID}</a>. ')\n  )\n  # Append table description content\n  tables_info_display_content <- verify_and_append_content(\n    tables_info_display_content,\n    current_table_description,\n    missing_warning(\"Part description\", current_table_ID),\n    glue::glue('\n                 {current_table_description}'),\n    \"\"\n  )\n  # Append table instruction content\n  tables_info_display_content <- verify_and_append_content(\n    tables_info_display_content,\n    current_table_instructions,\n    missing_warning(\"Part Instructions\", current_table_ID),\n    glue::glue(' {current_table_instructions}'),\n    \"\"\n  )\n  # Start the table columns list \n  tables_info_display_content <-\n    glue::glue('{tables_info_display_content}<ul>')\n  \n  for (column_row_index in seq_len(nrow(table_columns))) {\n    current_table_column <- table_columns[column_row_index, ]\n    \n    detected_column_role <- current_table_column[[current_table_ID]]\n    column_role <- \"NA\"\n    if (verify_input(detected_column_role, missing_warning(\"Valid column role\", current_table_ID))) {\n      if (detected_column_role == parts$part_sheet_table_column_type_is_FK) {\n        column_role <- part_sheet_table_column_type_set_FK\n      } else if (detected_column_role == parts$part_sheet_table_column_type_is_PK) {\n        column_role <- part_sheet_table_column_type_set_PK\n      } else if (detected_column_role == parts$part_sheet_table_column_type_is_header) {\n        column_role <- part_sheet_table_column_type_set_header\n      } \n    }\n    \n    # Column_ID is assumed to be always present missing ID means invalid part\n    column_ID <- current_table_column[[parts_sheet_column_names$part_ID_column_name]]\n    \n    # Variables being used in column display\n    column_label <- current_table_column[[parts_sheet_column_names$part_label_column_name]]\n    column_description <- current_table_column[[parts_sheet_column_names$part_description_column_name]]\n    column_required <- current_table_column[[current_table_required_column_name]]\n    column_dataType <- current_table_column[[parts_sheet_column_names$part_data_type_column_name]]\n    \n    # Append column display\n    tables_info_display_content <-\n      glue::glue(\n        '{tables_info_display_content}<li>')\n    \n    # Append column label info\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_label,\n      missing_and_substituted(column_ID, part_label_label, part_ID_label),\n      glue::glue(\n        '**{column_label}** (<a href=\\\"/parts.html#{column_ID}\\\">{column_ID}</a>).'),\n      glue::glue(\n        '**{column_ID}** (<a href=\\\"/parts.html#{column_ID}\\\">{column_ID}</a>).')\n    )\n    # Append column description\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_description,\n      missing_warning(\"Part description\", column_ID),\n      glue::glue(\n        ' {column_description}'),\n      \"\"\n    )\n    # Append column Role\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_role,\n      missing_warning(current_table_ID, column_ID),\n      glue::glue('</br>Role: {column_role}.'),\n      \"\"\n    )\n    # Append column Requirement\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_required,\n      missing_warning(current_table_required_column_name, column_ID),\n      glue::glue('</br>Requirement: {column_required}.'),\n      \"\"\n      )\n    # Append column data type\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_dataType,\n      missing_warning(\"Part data type\", column_ID),\n      glue::glue('</br>Data type: {column_dataType}.'),\n      \"\"\n      )\n    # Append link to catSetID if dataType is categorical\n    if (column_dataType == parts$data_type_is_categorical) {\n      column_catSetID <- current_table_column[[parts_sheet_column_names$part_cat_set_ID_column_name]]\n      tables_info_display_content <- verify_and_append_content(\n        tables_info_display_content,\n        column_catSetID,\n        invalid_cat_link(column_ID),\n        glue::glue(\n          '</br>Measure, method or attribute set: <a href=\\\"/sets.html#{column_catSetID}\\\">{column_catSetID}</a>'\n        ),\n        \"\"\n      )\n    }\n    \n    # Close off column list element\n    tables_info_display_content <-\n      glue::glue('{tables_info_display_content}</li>')\n  }\n  tables_info_display_content <-\n    glue::glue('{tables_info_display_content}</ul>')\n}\ntable_of_content <- glue::glue('{table_of_content}</ul>')\n```\n\n`r table_of_content` `r tables_info_display_content`\n\n{{< include _date-created.qmd >}}\n","srcMarkdownNoYaml":"\n\n```{r setup, echo=FALSE}\nknitr::opts_knit$set(root.dir = normalizePath(\"../\"))\n```\n\n<!--` reference1 -->\n\n# Tables {.unnumbered}\n\n{{< include _dictionary-version.qmd >}}\n\nThe ODM database model has 21 tables in its full relational database. The full model is commonly referred to as \"long\" tables as it stores data with one measurement per row. Each table has mandatory and optional headers.\n\n::: callout-note\n## Data storage\n\nStore all ODM data in the 21 recommended tables to ensure optimal interoprablity and support by the [ODM validation toolkit](https://validate-docs.phes-odm.org \"ODM validation toolkit\") and other ODM libraries.\n\nUsers can, however, create custom tables or 'views' by merging fields from any table. A common format for data entry format are \"wide\" table format, with *one day per row* and multiple measures or attributes per row. It is important to note that this guide does not provide instructions on generating wide tables.\n:::\n\n## Table types\n\nThere are five table types:\n\n1\\) **Regular report tables**. The `measures` and `samples` tables are used for daily reporting of new measurements and information on sample collection. There are three tables that support regular reporting:- `measureSets` (optional) is used to link measures, `sampleRelationships` (optional) is used when samples are pooled or split, and `qualityReports` is used for detailed quality assurance and control measures.\n\n2\\) **Contact information tables**. The `sites`, `organizations`, `contacts`, and `addresses` tables store contact information for the testing site and the person who performed the testing.\n\n3\\) **Protocol or methods tables**. The `protocols` and `instruments` tables hold information on the methods used for sample collection or measurement. `protocolSteps` and `protocolRelationships` tables are used in conjunction with the `protocols` table.\n\n4\\) **Other report tables**.Â The `polygons` table stores information on the sample area and the `datasets` table includes information on the data custodian and owner.\n\n5\\) **Dictionary reference tables**. The `parts` table describes all elements of the ODM, including tables, table headers, measures, methods, categories, and units. The `sets` table stores collections of parts, such as units grouped together in a unitSet. The `languages` and `translations` tables support translations.\n\n## Header roles\n\nEach table in the ODM has column headers, also known as table variables, fields, or entity relationship attributes. The header serves as the top row and contains the variable name.\n\n**Primary key** (PK) - With the exception of the dictionary tables, all tables have one primary key. The primary key serves as a unique identifier for each row in the table, meaning that a primary key value cannot be repeated.\n\n**Foreign key** (FK) - Tables may have one or more foreign keys. A foreign key connects an entry to another table with a primary key. This allows for relationships to be established between tables, making it possible to link data between different tables.\n\n**Header** (header) - This label is used in a table description when a header is not a primary or foreign key.\n\n## Mandatory, optional, mandatoryIf\n\nEach header may be classified as either `mandatory` or `optional`. In the `measures` table, examples of mandatory headers are the `measureID` and `measurement date`. The ODM validation toolkit can be used to validate data, and will return an error if a table lacks a mandatory header or if there are missing row entries for mandatory fields.\n\nAdditionally, there are special headers called `mandatoryIf` headers. These headers are mandatory if certain conditions apply. For example, the `protocol steps` table has row entries that are either `measures` or `methods`. If the row entry is a `measure`, then a `unit` becomes `mandatory` since all measures must have a unit. Therefore, units are `mandatoryIf` in the protocol steps table.\n\n<!--` reference1/ -->\n\n```{r, echo=FALSE, warning=FALSE}\n# Can put warning=FALSE above if warnings in display are an issue\n# Source utility functions\nsource(\"R/qmd-utils.R\")\n# Source table formatting\nsource(\"R/format-table.R\")\n# Source warning utils\nsource(\"R/warning-utils.R\")\nsource(\"R/odm-dictionary-file.R\")\nsource(\"R/parts-sheet.R\")\n# String set Values\npart_sheet_table_column_type_set_PK <- \"Primary Key\"\npart_sheet_table_column_type_set_FK <- \"Foreign Key\"\npart_sheet_table_column_type_set_header <- \"Header\"\n\n\n# Read in and prepare parts data.frame\nparts_table <- format_table(parts_table_source, parts_sheet_column_names, remove_duplicate = TRUE)\n\n# Generate tables data.frame\ntables_data <-\n  parts_table[parts_table[[parts_sheet_column_names$part_type_column_name]] == parts$part_type_is_table &\n                parts_table[[parts_sheet_column_names$part_status_column_name]] == parts$status_is_active,]\n\n# Sort tables alphabetically based on partID\ntables_data <- tables_data[order(tables_data[[parts_sheet_column_names$part_ID_column_name]]),]\n\n# Utilize tables_data to generate names of table specific columns\nall_required_column_names <-\n  glue::glue('{tables_data[[parts_sheet_column_names$part_ID_column_name]]}Required')\nall_order_column_names <-\n  glue::glue('{tables_data[[parts_sheet_column_names$part_ID_column_name]]}Order')\nall_table_column_names <- tables_data[[parts_sheet_column_names$part_ID_column_name]]\ntable_name_columns <- c(all_table_column_names, all_required_column_names, all_order_column_names)\n\n# Perform additional formatting on table specific columns\nparts_table <- format_parts_table(parts_table)\nparts_table[all_table_column_names] <- lapply(parts_table[all_table_column_names], trimws)\n\n# Declaring string that will be appended during the loops\ntable_of_content <- glue::glue('## Table list\n                               <ul>')\ntables_info_display_content <- \"\"\n\nfor (table_row_index in seq_len(nrow(tables_data))) {\n  current_table_data <- tables_data[table_row_index, ]\n  # Invalid partIDs are removed during format_table so no further verification is needed\n  current_table_ID <- current_table_data[[parts_sheet_column_names$part_ID_column_name]]\n  current_table_order_column_name <- all_order_column_names[[table_row_index]]\n  current_table_required_column_name <- all_required_column_names[[table_row_index]]\n  \n  \n  # Acquire columns that belong to the table\n  table_columns <-\n    parts_table[parts_table[[current_table_ID]] == parts$part_sheet_table_column_type_is_PK |\n                  parts_table[[current_table_ID]] == parts$part_sheet_table_column_type_is_FK |\n                  parts_table[[current_table_ID]] == parts$part_sheet_table_column_type_is_header,]\n  # In case a table has no PK, FK, header\n  if(nrow(table_columns)==0){\n    warning(skipped_and_invalid(current_table_ID))\n    next()\n  }\n  \n  # Order table columns by the order column if valid column is present\n  if (verify_input(\n    table_columns[[current_table_order_column_name]],\n    skipped_order(current_table_ID)\n  )) {\n    table_columns <-\n      table_columns[order(as.numeric(table_columns[[current_table_order_column_name]])), ]\n  }\n  \n  # Pull out display content\n  current_table_label <- current_table_data[[parts_sheet_column_names$part_label_column_name]]\n  current_table_description <- current_table_data[[parts_sheet_column_names$part_description_column_name]]\n  current_table_instructions <- current_table_data[[parts_sheet_column_names$part_instruction_column_name]]\n  \n  # Append table display content\n  table_of_content <-\n    glue::glue(\n      '{table_of_content}<li><a href=\\\"#{current_table_ID}\\\">'\n    )\n  # Append table label related content\n  part_label_label <- parts_table[parts_table[[parts_sheet_column_names$part_ID_column_name]]== parts_sheet_column_names$part_label_column_name, parts_sheet_column_names$part_label_column_name]\n  part_ID_label <- parts_table[parts_table[[parts_sheet_column_names$part_ID_column_name]]== parts_sheet_column_names$part_ID_column_name, parts_sheet_column_names$part_label_column_name]\n  table_of_content <- verify_and_append_content(\n    table_of_content,\n    current_table_label,\n    missing_and_substituted(current_table_ID, part_label_label, part_ID_label),\n    glue::glue('{current_table_label}</a></li>'),\n    glue::glue('{current_table_ID}</a></li>')\n  )\n  tables_info_display_content <- verify_and_append_content(\n    tables_info_display_content,\n    current_table_label,\n    missing_and_substituted(current_table_ID, part_label_label, part_ID_label),\n    glue::glue('\n    \n      ### {current_table_label} {{ #{current_table_ID} }}\n      partID: <a href=\\\"/parts.html#{current_table_ID}\\\">{current_table_ID}</a>. '),\n    glue::glue('\n      ### {current_table_ID} {{ #{current_table_ID} }}\n      partID: <a href=\\\"/parts.html#{current_table_ID}\\\">{current_table_ID}</a>. ')\n  )\n  # Append table description content\n  tables_info_display_content <- verify_and_append_content(\n    tables_info_display_content,\n    current_table_description,\n    missing_warning(\"Part description\", current_table_ID),\n    glue::glue('\n                 {current_table_description}'),\n    \"\"\n  )\n  # Append table instruction content\n  tables_info_display_content <- verify_and_append_content(\n    tables_info_display_content,\n    current_table_instructions,\n    missing_warning(\"Part Instructions\", current_table_ID),\n    glue::glue(' {current_table_instructions}'),\n    \"\"\n  )\n  # Start the table columns list \n  tables_info_display_content <-\n    glue::glue('{tables_info_display_content}<ul>')\n  \n  for (column_row_index in seq_len(nrow(table_columns))) {\n    current_table_column <- table_columns[column_row_index, ]\n    \n    detected_column_role <- current_table_column[[current_table_ID]]\n    column_role <- \"NA\"\n    if (verify_input(detected_column_role, missing_warning(\"Valid column role\", current_table_ID))) {\n      if (detected_column_role == parts$part_sheet_table_column_type_is_FK) {\n        column_role <- part_sheet_table_column_type_set_FK\n      } else if (detected_column_role == parts$part_sheet_table_column_type_is_PK) {\n        column_role <- part_sheet_table_column_type_set_PK\n      } else if (detected_column_role == parts$part_sheet_table_column_type_is_header) {\n        column_role <- part_sheet_table_column_type_set_header\n      } \n    }\n    \n    # Column_ID is assumed to be always present missing ID means invalid part\n    column_ID <- current_table_column[[parts_sheet_column_names$part_ID_column_name]]\n    \n    # Variables being used in column display\n    column_label <- current_table_column[[parts_sheet_column_names$part_label_column_name]]\n    column_description <- current_table_column[[parts_sheet_column_names$part_description_column_name]]\n    column_required <- current_table_column[[current_table_required_column_name]]\n    column_dataType <- current_table_column[[parts_sheet_column_names$part_data_type_column_name]]\n    \n    # Append column display\n    tables_info_display_content <-\n      glue::glue(\n        '{tables_info_display_content}<li>')\n    \n    # Append column label info\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_label,\n      missing_and_substituted(column_ID, part_label_label, part_ID_label),\n      glue::glue(\n        '**{column_label}** (<a href=\\\"/parts.html#{column_ID}\\\">{column_ID}</a>).'),\n      glue::glue(\n        '**{column_ID}** (<a href=\\\"/parts.html#{column_ID}\\\">{column_ID}</a>).')\n    )\n    # Append column description\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_description,\n      missing_warning(\"Part description\", column_ID),\n      glue::glue(\n        ' {column_description}'),\n      \"\"\n    )\n    # Append column Role\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_role,\n      missing_warning(current_table_ID, column_ID),\n      glue::glue('</br>Role: {column_role}.'),\n      \"\"\n    )\n    # Append column Requirement\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_required,\n      missing_warning(current_table_required_column_name, column_ID),\n      glue::glue('</br>Requirement: {column_required}.'),\n      \"\"\n      )\n    # Append column data type\n    tables_info_display_content <- verify_and_append_content(\n      tables_info_display_content,\n      column_dataType,\n      missing_warning(\"Part data type\", column_ID),\n      glue::glue('</br>Data type: {column_dataType}.'),\n      \"\"\n      )\n    # Append link to catSetID if dataType is categorical\n    if (column_dataType == parts$data_type_is_categorical) {\n      column_catSetID <- current_table_column[[parts_sheet_column_names$part_cat_set_ID_column_name]]\n      tables_info_display_content <- verify_and_append_content(\n        tables_info_display_content,\n        column_catSetID,\n        invalid_cat_link(column_ID),\n        glue::glue(\n          '</br>Measure, method or attribute set: <a href=\\\"/sets.html#{column_catSetID}\\\">{column_catSetID}</a>'\n        ),\n        \"\"\n      )\n    }\n    \n    # Close off column list element\n    tables_info_display_content <-\n      glue::glue('{tables_info_display_content}</li>')\n  }\n  tables_info_display_content <-\n    glue::glue('{tables_info_display_content}</ul>')\n}\ntable_of_content <- glue::glue('{table_of_content}</ul>')\n```\n\n`r table_of_content` `r tables_info_display_content`\n\n{{< include _date-created.qmd >}}\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"tables.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en-ca","fig-responsive":true,"quarto-version":"1.3.296","theme":{"light":["cosmo","assets/phes-odm.scss"]},"code-copy":true},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","toc":true,"number-sections":true,"output-file":"tables.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"block-headings":true,"documentclass":"scrbook","colorlinks":true},"extensions":{"book":{"selfContainedOutput":true}}},"epub":{"identifier":{"display-name":"ePub","target-format":"epub","base-format":"epub"},"execute":{"fig-width":5,"fig-height":4,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"epub","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"default-image-extension":"png","html-math-method":"mathml","to":"epub","css":["assets/phes-odm.css"],"output-file":"tables.epub"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf","epub"]}