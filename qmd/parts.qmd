
# Parts {.unnumbered}

{{< include _dictionary-version.qmd >}}

Parts are the smallest way of describing anything in the ODM. Think of the example of parts of a car. If you own a car, your garage can access a parts list that contains every part of your car -- right down to every nut and bolt. The same is true for the ODM. 

The ODM has a part ID (partID) and part description (partDescription) for every measure, method and attribute. There are also partIDs for measure categories, units, aggregations, and other parts. Below is the part list.

```{r, echo=FALSE}
# Function to check if left side is not equal to right side while working with NAs
`%!=na%` <-
  function(left_operand, right_operand) {
    (left_operand != right_operand |
       (is.na(left_operand) & !is.na(right_operand)) | 
       (!is.na(left_operand) & is.na(right_operand))) &
      !(is.na(left_operand) & is.na(right_operand))
  }

# String to store parts display content
parts_info_display_content <- ""


parts_table <-
  readxl::read_excel(file.path("..", pkg.env$dictionary_directory, dictionary_full_file_name),
                     sheet = pkg.env$parts_sheet_name)

# Removal of rows containing R NA for part ID
parts_table <-
  parts_table[!is.na(parts_table[[pkg.env$part_ID_column_name]]), ]
# Removal of rows containing R NULL for part ID
parts_table <-
  parts_table[!is.null(parts_table[[pkg.env$part_ID_column_name]]), ]
# Sort parts alphabetically by partID
parts_table <- parts_table[order(parts_table[[pkg.env$part_ID_column_name]]), ]

# Loop over every part
for (part_row_index in seq_len(nrow(parts_table))) {
  part_row <- parts_table[part_row_index,]
  
  # Declare variables used
  # Once tables is merged format and verify input
  part_ID <- part_row[[pkg.env$part_ID_column_name]]
  part_label <- part_row[[pkg.env$part_label_column_name]]
  part_description <- part_row[[pkg.env$part_description_column_name]]
  part_instruction <- part_row[[pkg.env$part_instruction_column_name]]
  part_type <- part_row[[pkg.env$part_type_column_name]]
  part_domain_ID <- part_row[[pkg.env$part_domain_ID_column_name]]
  part_speciment_set <- part_row[[pkg.env$part_speciment_set_column_name]]
  part_comp_set <- part_row[[pkg.env$part_comp_set_column_name]]
  part_group_ID <- part_row[[pkg.env$part_group_ID_column_name]]
  part_class_ID <- part_row[[pkg.env$part_class_ID_column_name]]
  part_nomenclature_ID <- part_row[[pkg.env$part_nomenclature_ID_column_name]]
  part_ontology_reference <- part_row[[pkg.env$part_ontology_reference_column_name]]
  part_cat_set_ID <- part_row[[pkg.env$part_cat_set_ID_column_name]]
  part_unit_set_ID <- part_row[[pkg.env$part_unit_set_ID_column_name]]
  part_agg_scale_ID <- part_row[[pkg.env$part_agg_scale_ID_column_name]]
  part_quality_set_ID <- part_row[[pkg.env$part_quality_set_ID_column_name]]
  part_ref_link <- part_row[[pkg.env$part_ref_link_column_name]]
  part_data_type <- part_row[[pkg.env$part_data_type_column_name]]
  part_min_value <- part_row[[pkg.env$part_min_value_column_name]]
  part_max_value <- part_row[[pkg.env$part_max_value_column_name]]
  part_min_length <- part_row[[pkg.env$part_min_length_column_name]]
  part_max_length <- part_row[[pkg.env$part_max_length_column_name]]
  part_status <- part_row[[pkg.env$part_status_column_name]]
  part_first_released <- part_row[[pkg.env$part_first_release_column_name]]
  part_last_updated <- part_row[[pkg.env$part_last_updated_column_name]]
  
  # Assemble the display string
  parts_info_display_content <-
    glue::glue(
      '{parts_info_display_content}
      
      ### {part_label} {{ #{part_ID} }} 
      ({part_ID}).
      {part_description} {if (part_instruction %!=na% "NA") part_instruction else "" } </br>
      *Part Type:* <a href="#{part_type}">{part_type}</a> </br>
      *Domain ID:* <a href="#{part_domain_ID}">{part_domain_ID}</a> </br>
      *Speciment ID:* <a href="#{part_speciment_set}">{part_speciment_set}</a> </br>
      *Compartment Set:* <a href="#{part_comp_set}">{part_comp_set}</a> </br>
      *Group ID:* <a href="#{part_group_ID}">{part_group_ID}</a> </br>
      *Class ID:* <a href="#{part_class_ID}">{part_class_ID}</a> </br>
      *Nomenclature ID:* <a href="#{part_nomenclature_ID}">{part_nomenclature_ID}</a> </br>
      *Ontology Reference:* <a href="#{part_ontology_reference}">{part_ontology_reference}</a> </br>
      *Category Set ID:* <a href="/sets.html#{part_cat_set_ID}">{part_cat_set_ID}</a> </br>
      *Unit Set ID:* <a href="#{part_unit_set_ID}">{part_unit_set_ID}</a> </br>
      *Aggregation Scale ID:* <a href="#{part_agg_scale_ID}">{part_agg_scale_ID}</a> </br>
      *Quality Set ID:* <a href="#{part_quality_set_ID}">{part_quality_set_ID}</a> </br>
      *Reference Link:* {part_ref_link} </br>
      *Data Type:* <a href="#{part_data_type}">{part_data_type}</a> </br>
      *Minimum Value:* {part_min_value} </br>
      *Maximum Value:* {part_max_value} </br>
      *Minimum Length:* {part_min_length} </br>
      *Maximum Length:* {part_max_length} </br>
      *Part Status:* {if (part_status %!=na% pkg.env$part_sheet_status_is_active) glue::glue(\'**{part_status}**\') else part_status }. \\
      First released: {part_first_released}. \\
      Last updated: {part_last_updated}. </br>
      ')
}


```
`r parts_info_display_content`