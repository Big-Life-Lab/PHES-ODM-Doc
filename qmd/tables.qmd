<!--` reference1 -->

# Tables {.unnumbered}

The list of tables below are for ODM version 2.0.0-rc.2 <!--# Let's add the code to display the machine-generated version -->.

There are 21 tables in the ODM.<!--# I've added explanatory text. This text should be moved to our explanatory documents, but I've placed here as a temporary solution until we generate those documents. -->

Users can customize the tables for different purposes. The format of the tables in this reference document is for the full relational database model. The comprehensive list of tables includes all mandatory and optional headers. The table format is used for drata storage and they are informally described as "long" tables with one measure, method or attribute for each row.

Users can modify or create their own table format for data entry, analyses, or reporting. Commonly, these tables are a "wide" format where there is one day per row and multiple measures or attributes per row. How to generate wide tables is not included in this section.

There are three types of tables:

1\) **Regular report tables**. The `measues` and `samples` tables are used day-to-day reporting of new measurements and information about how and when samples are collected.

Three tables support regular reporting. `measureSets` is an optional table that can be used to link measures together. `sampleRelationships` is also optional and used only when you have samples that are pooled or split. `qualityReports` is used for detailed quality assurance and control measures.

2\) **Contact information tables**. `sites`, `organizations`, `contacts`, and `addresses` hold contact information where testing was performed and who performed testing.

3\) **Protocol or methods tables**. `protocols` and `instruments` are where you record information about the methods used to perform sample, or make measurements or observations. how samples are taken and measures are reported. `protocolSteps` and `protocolRelationships`tables are part used alongside the `protocols` table.

4\) **Other report tables**. These tables include `polygons` where information is store about the sample shed and `datasets` which includes information about the data custodian and owner of the data.

5\) **Dictionary tables**. `parts`, `sets`, `languages`, and `translations` these tables....

<!--` reference1/ -->

```{r, echo=FALSE}
main_db <- DBI::dbConnect(RSQLite::SQLite(), "../data/tables/main.sqlite")
quary <- paste("SELECT", "*", "FROM", "table_of_contents")
val_table <- DBI::dbGetQuery(main_db, quary)

content_string <-""
table_of_content <-"<ul>"

for (row_index in 1:nrow(val_table)) {
  if(is.na(val_table[row_index, ]$partType)){
    next()
  }
  
  working_row <- val_table[row_index, ]
  
  content_string <- paste0(content_string, working_row$partLabel, " (", working_row$partID, ") </br>", working_row$partDesc, "</br></br>")
  
  table_of_content <- paste0(table_of_content, "<li><a href=\"#", working_row$partID, "\">", working_row$partID, "</a></li>")
  
}
table_of_content <- paste0(table_of_content, "</ul>")



quary <- paste("SELECT", "*", "FROM", "cat_tables")
val_table <- DBI::dbGetQuery(main_db, quary)
new_content <- ""
running_table_name <-""
is_there_active_table <- FALSE

for (row_index in 1:nrow(val_table)) {
  working_row <- val_table[row_index, ]
  if (is.na(val_table[row_index,]$partType)) {
    next()
  } else if (val_table[row_index,]$partType == "table") {
    if (is_there_active_table){
      new_content <-
      paste0(
        new_content, "</ul>")
      is_there_active_table <- FALSE
    }
    running_table_name <- working_row$partID
    new_content <-
      paste0(
        new_content,"**", 
        working_row$partLabel,
        "** (<a name=\"",
        working_row$partID,
        "\"></a>",working_row$partID,
        ") </br>",
        working_row$partDesc,
        "</br></br>"
      )
    if(!is_there_active_table){
      is_there_active_table <- TRUE
      new_content <-
      paste0(
        new_content, "<ul>")
    }
  }else{
    required_col_name <- paste0(running_table_name,"Required")
    
    tmp_key_type <- working_row[[running_table_name]]
    if(length(tmp_key_type)>0&&!is.na(tmp_key_type)) {
      if (tolower(tmp_key_type) == "fk") {
        tmp_key_type <- "Foreign Key"
      } else if (tolower(tmp_key_type) == "pk") {
        tmp_key_type <- "Primary Key"
      } else if(tolower(tmp_key_type) == "input"){
        next() 
      }
    }
    new_content <-
      paste0(
        new_content, "<li>**",
        working_row$partLabel,
        "** (",
        working_row$partID,
        "):(",tmp_key_type, ") (Required: ", working_row[[required_col_name]], ") [", working_row$dataType, "]</br>",
        working_row$partDesc, working_row$sub_categories_string, 
        "</li>"
      )
  }
}
if(is_there_active_table){
  new_content <-
      paste0(
        new_content, "</ul>")
}

```

`r table_of_content` `r new_content`

`{rvml}`

`{rvml}`

Page created on `r format(Sys.Date(), "%c")`, using document generator version 0.1.
